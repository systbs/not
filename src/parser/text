itable_t *it1;
	for (it1 = frame->begin;(it1 != frame->end);it1 = it1->next)
	{
		if ((it1->original != NULL) && ((it1->flag & ITABLE_FLAG_TEMPORARY) != ITABLE_FLAG_TEMPORARY))
		{
			symbol_t *o1 = it1->original;
			if (o1 != NULL)
			{
				symbol_t *ok1;
				ok1 = syntax_extract_with(it1->original, SYMBOL_KEY);
				if (ok1 != NULL)
				{
					symbol_t *tk1;
					tk1 = syntax_extract_with(target, SYMBOL_KEY);
					if (tk1 != NULL)
					{
						if (syntax_idcmp(ok1, tk1) == 0)
						{
							if (symbol_check_type(o1, SYMBOL_CLASS))
							{
								symbol_t *ogs1;
								ogs1 = syntax_only_with(o1, SYMBOL_GENERICS);
								if (ogs1 != NULL)
								{
									symbol_t *tgs1;
									tgs1 = syntax_only_with(target, SYMBOL_GENERICS);
									if (tgs1 != NULL)
									{
										int32_t r1;
										r1 = syntax_equal_gsgs(program, tgs1, ogs1);
										if (r1 == -1)
										{
											return -1;
										}
										else
										if (r1 == 1)
										{
											symbol_t *ob1;
											for (ob1 = o1->begin;ob1 != o1->end;ob1 = ob1->next)
											{
												if (symbol_check_type(ob1, SYMBOL_FUNCTION))
												{
													symbol_t *obk1;
													obk1 = syntax_extract_with(ob1, SYMBOL_KEY);
													if (obk1 != NULL)
													{
														if (syntax_idstrcmp(obk1, "constructor") == 0)
														{
															symbol_t *tb1;
															for (tb1 = target->begin;tb1 != target->end;tb1 = tb1->next)
															{
																if (symbol_check_type(tb1, SYMBOL_FUNCTION))
																{
																	symbol_t *tbk1;
																	tbk1 = syntax_extract_with(tb1, SYMBOL_KEY);
																	if (tbk1 != NULL)
																	{
																		if (syntax_idstrcmp(tbk1, "constructor") == 0)
																		{
																			symbol_t *obps1;
																			obps1 = syntax_only_with(ob1, SYMBOL_PARAMETERS);
																			if (obps1 != NULL)
																			{
																				symbol_t *tbps1;
																				tbps1 = syntax_only_with(tb1, SYMBOL_PARAMETERS);
																				if (tbps1 != NULL)
																				{
																					int32_t r2;
																					r2 = syntax_equal_psps(program, obps1, tbps1);
																					if (r2 == -1)
																					{
																						return -1;
																					}
																					else 
																					if (r2 == 1)
																					{
																						syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																							ok1->declaration->position.line, ok1->declaration->position.column);
																						return -1;
																					}
																					else
																					{
																						itable_t *it2;
																						it2 = table_rpush(frame, target);
																						if (it2 == NULL)
																						{
																							fprintf(stderr, "unable to allocate memory\n");
																							return -1;
																						}
																					}
																				}
																				else
																				{
																					int32_t pwv = 0;
																					symbol_t *obp1;
																					for (obp1 = obps1->begin;obp1 != obps1->end;obp1 = obp1->next)
																					{
																						symbol_t *obpv1;
																						obpv1 = syntax_only_with(obp1, SYMBOL_VALUE);
																						if (obpv1 == NULL)
																						{
																							pwv = 1;
																							break;
																						}
																					}

																					if (pwv == 0)
																					{
																						syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																							ok1->declaration->position.line, ok1->declaration->position.column);
																						return -1;
																					}

																					itable_t *it2;
																					it2 = table_rpush(frame, target);
																					if (it2 == NULL)
																					{
																						fprintf(stderr, "unable to allocate memory\n");
																						return -1;
																					}
																				}
																			}
																			else
																			{
																				symbol_t *tbps1;
																				tbps1 = syntax_only_with(tb1, SYMBOL_PARAMETERS);
																				if (tbps1 != NULL)
																				{
																					int32_t pwv = 0;
																					symbol_t *tbp1;
																					for (tbp1 = tbps1->begin;tbp1 != tbps1->end;tbp1 = tbp1->next)
																					{
																						symbol_t *tbpv1;
																						tbpv1 = syntax_only_with(tbp1, SYMBOL_VALUE);
																						if (tbpv1 == NULL)
																						{
																							pwv = 1;
																							break;
																						}
																					}

																					if (pwv == 0)
																					{
																						syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																							ok1->declaration->position.line, ok1->declaration->position.column);
																						return -1;
																					}

																					itable_t *it2;
																					it2 = table_rpush(frame, target);
																					if (it2 == NULL)
																					{
																						fprintf(stderr, "unable to allocate memory\n");
																						return -1;
																					}
																				}
																				else
																				{
																					syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																						ok1->declaration->position.line, ok1->declaration->position.column);
																					return -1;
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
										else
										{
											itable_t *it2;
											it2 = table_rpush(frame, target);
											if (it2 == NULL)
											{
												fprintf(stderr, "unable to allocate memory\n");
												return -1;
											}
										}
									}
									else
									{
										int32_t gwv = 0;
										symbol_t *og1;
										for (og1 = ogs1->begin;og1 != ogs1->end;og1 = og1->next)
										{
											if (symbol_check_type(og1, SYMBOL_GENERIC))
											{
												symbol_t *ogv1;
												ogv1 = syntax_only_with(og1, SYMBOL_VALUE);
												if (ogv1 != NULL)
												{
													gwv = 1;
													break;
												}
											}
										}
										if (gwv == 0)
										{
											symbol_t *ob1;
											for (ob1 = o1->begin;ob1 != o1->end;ob1 = ob1->next)
											{
												if (symbol_check_type(ob1, SYMBOL_FUNCTION))
												{
													symbol_t *obk1;
													obk1 = syntax_extract_with(ob1, SYMBOL_KEY);
													if (obk1 != NULL)
													{
														if (syntax_idstrcmp(obk1, "constructor") == 0)
														{
															symbol_t *tb1;
															for (tb1 = target->begin;tb1 != target->end;tb1 = tb1->next)
															{
																if (symbol_check_type(tb1, SYMBOL_FUNCTION))
																{
																	symbol_t *tbk1;
																	tbk1 = syntax_extract_with(tb1, SYMBOL_KEY);
																	if (tbk1 != NULL)
																	{
																		if (syntax_idstrcmp(tbk1, "constructor") == 0)
																		{
																			symbol_t *obps1;
																			obps1 = syntax_only_with(ob1, SYMBOL_PARAMETERS);
																			if (obps1 != NULL)
																			{
																				symbol_t *tbps1;
																				tbps1 = syntax_only_with(tb1, SYMBOL_PARAMETERS);
																				if (tbps1 != NULL)
																				{
																					int32_t r2;
																					r2 = syntax_equal_psps(program, obps1, tbps1);
																					if (r2 == -1)
																					{
																						return -1;
																					}
																					else 
																					if (r2 == 1)
																					{
																						syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																							ok1->declaration->position.line, ok1->declaration->position.column);
																						return -1;
																					}
																					else
																					{
																						itable_t *it2;
																						it2 = table_rpush(frame, target);
																						if (it2 == NULL)
																						{
																							fprintf(stderr, "unable to allocate memory\n");
																							return -1;
																						}
																					}
																				}
																				else
																				{
																					int32_t pwv = 0;
																					symbol_t *obp1;
																					for (obp1 = obps1->begin;obp1 != obps1->end;obp1 = obp1->next)
																					{
																						symbol_t *obpv1;
																						obpv1 = syntax_only_with(obp1, SYMBOL_VALUE);
																						if (obpv1 == NULL)
																						{
																							pwv = 1;
																							break;
																						}
																					}

																					if (pwv == 0)
																					{
																						syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																							ok1->declaration->position.line, ok1->declaration->position.column);
																						return -1;
																					}

																					itable_t *it2;
																					it2 = table_rpush(frame, target);
																					if (it2 == NULL)
																					{
																						fprintf(stderr, "unable to allocate memory\n");
																						return -1;
																					}
																				}
																			}
																			else
																			{
																				symbol_t *tbps1;
																				tbps1 = syntax_only_with(tb1, SYMBOL_PARAMETERS);
																				if (tbps1 != NULL)
																				{
																					int32_t pwv = 0;
																					symbol_t *tbp1;
																					for (tbp1 = tbps1->begin;tbp1 != tbps1->end;tbp1 = tbp1->next)
																					{
																						symbol_t *tbpv1;
																						tbpv1 = syntax_only_with(tbp1, SYMBOL_VALUE);
																						if (tbpv1 == NULL)
																						{
																							pwv = 1;
																							break;
																						}
																					}

																					if (pwv == 0)
																					{
																						syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																							ok1->declaration->position.line, ok1->declaration->position.column);
																						return -1;
																					}

																					itable_t *it2;
																					it2 = table_rpush(frame, target);
																					if (it2 == NULL)
																					{
																						fprintf(stderr, "unable to allocate memory\n");
																						return -1;
																					}
																				}
																				else
																				{
																					syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																						ok1->declaration->position.line, ok1->declaration->position.column);
																					return -1;
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
								else
								{
									symbol_t *tgs1;
									tgs1 = syntax_only_with(target, SYMBOL_GENERICS);
									if (tgs1 != NULL)
									{
										int32_t gwv = 0;
										symbol_t *tg1;
										for (tg1 = tgs1->begin;tg1 != tgs1->end;tg1 = tg1->next)
										{
											if (symbol_check_type(tg1, SYMBOL_GENERIC))
											{
												symbol_t *tgv1;
												tgv1 = syntax_only_with(tg1, SYMBOL_VALUE);
												if (tgv1 != NULL)
												{
													gwv = 1;
													break;
												}
											}
										}
										if (gwv == 0)
										{
											symbol_t *ob1;
											for (ob1 = o1->begin;ob1 != o1->end;ob1 = ob1->next)
											{
												if (symbol_check_type(ob1, SYMBOL_FUNCTION))
												{
													symbol_t *obk1;
													obk1 = syntax_extract_with(ob1, SYMBOL_KEY);
													if (obk1 != NULL)
													{
														if (syntax_idstrcmp(obk1, "constructor") == 0)
														{
															symbol_t *tb1;
															for (tb1 = target->begin;tb1 != target->end;tb1 = tb1->next)
															{
																if (symbol_check_type(tb1, SYMBOL_FUNCTION))
																{
																	symbol_t *tbk1;
																	tbk1 = syntax_extract_with(tb1, SYMBOL_KEY);
																	if (tbk1 != NULL)
																	{
																		if (syntax_idstrcmp(tbk1, "constructor") == 0)
																		{
																			symbol_t *obps1;
																			obps1 = syntax_only_with(ob1, SYMBOL_PARAMETERS);
																			if (obps1 != NULL)
																			{
																				symbol_t *tbps1;
																				tbps1 = syntax_only_with(tb1, SYMBOL_PARAMETERS);
																				if (tbps1 != NULL)
																				{
																					int32_t r2;
																					r2 = syntax_equal_psps(program, obps1, tbps1);
																					if (r2 == -1)
																					{
																						return -1;
																					}
																					else 
																					if (r2 == 1)
																					{
																						syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																							ok1->declaration->position.line, ok1->declaration->position.column);
																						return -1;
																					}
																					else
																					{
																						itable_t *it2;
																						it2 = table_rpush(frame, target);
																						if (it2 == NULL)
																						{
																							fprintf(stderr, "unable to allocate memory\n");
																							return -1;
																						}
																					}
																				}
																				else
																				{
																					int32_t pwv = 0;
																					symbol_t *obp1;
																					for (obp1 = obps1->begin;obp1 != obps1->end;obp1 = obp1->next)
																					{
																						symbol_t *obpv1;
																						obpv1 = syntax_only_with(obp1, SYMBOL_VALUE);
																						if (obpv1 == NULL)
																						{
																							pwv = 1;
																							break;
																						}
																					}

																					if (pwv == 0)
																					{
																						syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																							ok1->declaration->position.line, ok1->declaration->position.column);
																						return -1;
																					}

																					itable_t *it2;
																					it2 = table_rpush(frame, target);
																					if (it2 == NULL)
																					{
																						fprintf(stderr, "unable to allocate memory\n");
																						return -1;
																					}
																				}
																			}
																			else
																			{
																				symbol_t *tbps1;
																				tbps1 = syntax_only_with(tb1, SYMBOL_PARAMETERS);
																				if (tbps1 != NULL)
																				{
																					int32_t pwv = 0;
																					symbol_t *tbp1;
																					for (tbp1 = tbps1->begin;tbp1 != tbps1->end;tbp1 = tbp1->next)
																					{
																						symbol_t *tbpv1;
																						tbpv1 = syntax_only_with(tbp1, SYMBOL_VALUE);
																						if (tbpv1 == NULL)
																						{
																							pwv = 1;
																							break;
																						}
																					}

																					if (pwv == 0)
																					{
																						syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																							ok1->declaration->position.line, ok1->declaration->position.column);
																						return -1;
																					}

																					itable_t *it2;
																					it2 = table_rpush(frame, target);
																					if (it2 == NULL)
																					{
																						fprintf(stderr, "unable to allocate memory\n");
																						return -1;
																					}
																				}
																				else
																				{
																					syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																						ok1->declaration->position.line, ok1->declaration->position.column);
																					return -1;
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
									else
									{
										symbol_t *ob1;
										for (ob1 = o1->begin;ob1 != o1->end;ob1 = ob1->next)
										{
											if (symbol_check_type(ob1, SYMBOL_FUNCTION))
											{
												symbol_t *obk1;
												obk1 = syntax_extract_with(ob1, SYMBOL_KEY);
												if (obk1 != NULL)
												{
													if (syntax_idstrcmp(obk1, "constructor") == 0)
													{
														symbol_t *tb1;
														for (tb1 = target->begin;tb1 != target->end;tb1 = tb1->next)
														{
															if (symbol_check_type(tb1, SYMBOL_FUNCTION))
															{
																symbol_t *tbk1;
																tbk1 = syntax_extract_with(tb1, SYMBOL_KEY);
																if (tbk1 != NULL)
																{
																	if (syntax_idstrcmp(tbk1, "constructor") == 0)
																	{
																		symbol_t *obps1;
																		obps1 = syntax_only_with(ob1, SYMBOL_PARAMETERS);
																		if (obps1 != NULL)
																		{
																			symbol_t *tbps1;
																			tbps1 = syntax_only_with(tb1, SYMBOL_PARAMETERS);
																			if (tbps1 != NULL)
																			{
																				int32_t r2;
																				r2 = syntax_equal_psps(program, obps1, tbps1);
																				if (r2 == -1)
																				{
																					return -1;
																				}
																				else 
																				if (r2 == 1)
																				{
																					syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																						ok1->declaration->position.line, ok1->declaration->position.column);
																					return -1;
																				}
																				else
																				{
																					itable_t *it2;
																					it2 = table_rpush(frame, target);
																					if (it2 == NULL)
																					{
																						fprintf(stderr, "unable to allocate memory\n");
																						return -1;
																					}
																				}
																			}
																			else
																			{
																				int32_t pwv = 0;
																				symbol_t *obp1;
																				for (obp1 = obps1->begin;obp1 != obps1->end;obp1 = obp1->next)
																				{
																					symbol_t *obpv1;
																					obpv1 = syntax_only_with(obp1, SYMBOL_VALUE);
																					if (obpv1 == NULL)
																					{
																						pwv = 1;
																						break;
																					}
																				}

																				if (pwv == 0)
																				{
																					syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																						ok1->declaration->position.line, ok1->declaration->position.column);
																					return -1;
																				}

																				itable_t *it2;
																				it2 = table_rpush(frame, target);
																				if (it2 == NULL)
																				{
																					fprintf(stderr, "unable to allocate memory\n");
																					return -1;
																				}
																			}
																		}
																		else
																		{
																			symbol_t *tbps1;
																			tbps1 = syntax_only_with(tb1, SYMBOL_PARAMETERS);
																			if (tbps1 != NULL)
																			{
																				int32_t pwv = 0;
																				symbol_t *tbp1;
																				for (tbp1 = tbps1->begin;tbp1 != tbps1->end;tbp1 = tbp1->next)
																				{
																					symbol_t *tbpv1;
																					tbpv1 = syntax_only_with(tbp1, SYMBOL_VALUE);
																					if (tbpv1 == NULL)
																					{
																						pwv = 1;
																						break;
																					}
																				}

																				if (pwv == 0)
																				{
																					syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																						ok1->declaration->position.line, ok1->declaration->position.column);
																					return -1;
																				}

																				itable_t *it2;
																				it2 = table_rpush(frame, target);
																				if (it2 == NULL)
																				{
																					fprintf(stderr, "unable to allocate memory\n");
																					return -1;
																				}
																			}
																			else
																			{
																				syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																					ok1->declaration->position.line, ok1->declaration->position.column);
																				return -1;
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
							else
							if (symbol_check_type(o1, SYMBOL_FUNCTION))
							{
								symbol_t *ogs1;
								ogs1 = syntax_only_with(o1, SYMBOL_GENERICS);
								if (ogs1 != NULL)
								{
									symbol_t *tgs1;
									tgs1 = syntax_only_with(target, SYMBOL_GENERICS);
									if (tgs1 != NULL)
									{
										int32_t r1;
										r1 = syntax_equal_gsgs(program, tgs1, ogs1);
										if (r1 == -1)
										{
											return -1;
										}
										else
										if (r1 == 1)
										{
											symbol_t *tb1;
											for (tb1 = target->begin;tb1 != target->end;tb1 = tb1->next)
											{
												if (symbol_check_type(tb1, SYMBOL_FUNCTION))
												{
													symbol_t *tbk1;
													tbk1 = syntax_extract_with(tb1, SYMBOL_KEY);
													if (tbk1 != NULL)
													{
														if (syntax_idstrcmp(tbk1, "constructor") == 0)
														{
															symbol_t *obps1;
															obps1 = syntax_only_with(o1, SYMBOL_PARAMETERS);
															if (obps1 != NULL)
															{
																symbol_t *tbps1;
																tbps1 = syntax_only_with(tb1, SYMBOL_PARAMETERS);
																if (tbps1 != NULL)
																{
																	int32_t r2;
																	r2 = syntax_equal_psps(program, obps1, tbps1);
																	if (r2 == -1)
																	{
																		return -1;
																	}
																	else 
																	if (r2 == 1)
																	{
																		syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																			ok1->declaration->position.line, ok1->declaration->position.column);
																		return -1;
																	}
																	else
																	{
																		itable_t *it2;
																		it2 = table_rpush(frame, target);
																		if (it2 == NULL)
																		{
																			fprintf(stderr, "unable to allocate memory\n");
																			return -1;
																		}
																	}
																}
																else
																{
																	int32_t pwv = 0;
																	symbol_t *obp1;
																	for (obp1 = obps1->begin;obp1 != obps1->end;obp1 = obp1->next)
																	{
																		symbol_t *obpv1;
																		obpv1 = syntax_only_with(obp1, SYMBOL_VALUE);
																		if (obpv1 == NULL)
																		{
																			pwv = 1;
																			break;
																		}
																	}

																	if (pwv == 0)
																	{
																		syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																			ok1->declaration->position.line, ok1->declaration->position.column);
																		return -1;
																	}

																	itable_t *it2;
																	it2 = table_rpush(frame, target);
																	if (it2 == NULL)
																	{
																		fprintf(stderr, "unable to allocate memory\n");
																		return -1;
																	}
																}
															}
															else
															{
																symbol_t *tbps1;
																tbps1 = syntax_only_with(tb1, SYMBOL_PARAMETERS);
																if (tbps1 != NULL)
																{
																	int32_t pwv = 0;
																	symbol_t *tbp1;
																	for (tbp1 = tbps1->begin;tbp1 != tbps1->end;tbp1 = tbp1->next)
																	{
																		symbol_t *tbpv1;
																		tbpv1 = syntax_only_with(tbp1, SYMBOL_VALUE);
																		if (tbpv1 == NULL)
																		{
																			pwv = 1;
																			break;
																		}
																	}

																	if (pwv == 0)
																	{
																		syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																			ok1->declaration->position.line, ok1->declaration->position.column);
																		return -1;
																	}

																	itable_t *it2;
																	it2 = table_rpush(frame, target);
																	if (it2 == NULL)
																	{
																		fprintf(stderr, "unable to allocate memory\n");
																		return -1;
																	}
																}
																else
																{
																	syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																		ok1->declaration->position.line, ok1->declaration->position.column);
																	return -1;
																}
															}
														}
													}
												}
											}
										}
										else
										{
											itable_t *it2;
											it2 = table_rpush(frame, target);
											if (it2 == NULL)
											{
												fprintf(stderr, "unable to allocate memory\n");
												return -1;
											}
										}
									}
									else
									{
										int32_t gwv = 0;
										symbol_t *og1;
										for (og1 = ogs1->begin;og1 != ogs1->end;og1 = og1->next)
										{
											if (symbol_check_type(og1, SYMBOL_GENERIC))
											{
												symbol_t *ogv1;
												ogv1 = syntax_only_with(og1, SYMBOL_VALUE);
												if (ogv1 != NULL)
												{
													gwv = 1;
													break;
												}
											}
										}
										if (gwv == 0)
										{
											symbol_t *tb1;
											for (tb1 = o1->begin;tb1 != o1->end;tb1 = tb1->next)
											{
												if (symbol_check_type(tb1, SYMBOL_FUNCTION))
												{
													symbol_t *tbk1;
													tbk1 = syntax_extract_with(tb1, SYMBOL_KEY);
													if (tbk1 != NULL)
													{
														if (syntax_idstrcmp(tbk1, "constructor") == 0)
														{
															symbol_t *obps1;
															obps1 = syntax_only_with(o1, SYMBOL_PARAMETERS);
															if (obps1 != NULL)
															{
																symbol_t *tbps1;
																tbps1 = syntax_only_with(tb1, SYMBOL_PARAMETERS);
																if (tbps1 != NULL)
																{
																	int32_t r2;
																	r2 = syntax_equal_psps(program, obps1, tbps1);
																	if (r2 == -1)
																	{
																		return -1;
																	}
																	else 
																	if (r2 == 1)
																	{
																		syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																			ok1->declaration->position.line, ok1->declaration->position.column);
																		return -1;
																	}
																	else
																	{
																		itable_t *it2;
																		it2 = table_rpush(frame, target);
																		if (it2 == NULL)
																		{
																			fprintf(stderr, "unable to allocate memory\n");
																			return -1;
																		}
																	}
																}
																else
																{
																	int32_t pwv = 0;
																	symbol_t *obp1;
																	for (obp1 = obps1->begin;obp1 != obps1->end;obp1 = obp1->next)
																	{
																		symbol_t *obpv1;
																		obpv1 = syntax_only_with(obp1, SYMBOL_VALUE);
																		if (obpv1 == NULL)
																		{
																			pwv = 1;
																			break;
																		}
																	}

																	if (pwv == 0)
																	{
																		syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																			ok1->declaration->position.line, ok1->declaration->position.column);
																		return -1;
																	}

																	itable_t *it2;
																	it2 = table_rpush(frame, target);
																	if (it2 == NULL)
																	{
																		fprintf(stderr, "unable to allocate memory\n");
																		return -1;
																	}
																}
															}
															else
															{
																symbol_t *tbps1;
																tbps1 = syntax_only_with(tb1, SYMBOL_PARAMETERS);
																if (tbps1 != NULL)
																{
																	int32_t pwv = 0;
																	symbol_t *tbp1;
																	for (tbp1 = tbps1->begin;tbp1 != tbps1->end;tbp1 = tbp1->next)
																	{
																		symbol_t *tbpv1;
																		tbpv1 = syntax_only_with(tbp1, SYMBOL_VALUE);
																		if (tbpv1 == NULL)
																		{
																			pwv = 1;
																			break;
																		}
																	}

																	if (pwv == 0)
																	{
																		syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																			ok1->declaration->position.line, ok1->declaration->position.column);
																		return -1;
																	}

																	itable_t *it2;
																	it2 = table_rpush(frame, target);
																	if (it2 == NULL)
																	{
																		fprintf(stderr, "unable to allocate memory\n");
																		return -1;
																	}
																}
																else
																{
																	syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																		ok1->declaration->position.line, ok1->declaration->position.column);
																	return -1;
																}
															}
														}
													}
												}
											}
										}
									}
								}
								else
								{
									symbol_t *tgs1;
									tgs1 = syntax_only_with(target, SYMBOL_GENERICS);
									if (tgs1 != NULL)
									{
										int32_t gwv = 0;
										symbol_t *tg1;
										for (tg1 = tgs1->begin;tg1 != tgs1->end;tg1 = tg1->next)
										{
											if (symbol_check_type(tg1, SYMBOL_GENERIC))
											{
												symbol_t *tgv1;
												tgv1 = syntax_only_with(tg1, SYMBOL_VALUE);
												if (tgv1 != NULL)
												{
													gwv = 1;
													break;
												}
											}
										}
										if (gwv == 0)
										{
											symbol_t *tb1;
											for (tb1 = target->begin;tb1 != target->end;tb1 = tb1->next)
											{
												if (symbol_check_type(tb1, SYMBOL_FUNCTION))
												{
													symbol_t *tbk1;
													tbk1 = syntax_extract_with(tb1, SYMBOL_KEY);
													if (tbk1 != NULL)
													{
														if (syntax_idstrcmp(tbk1, "constructor") == 0)
														{
															symbol_t *obps1;
															obps1 = syntax_only_with(o1, SYMBOL_PARAMETERS);
															if (obps1 != NULL)
															{
																symbol_t *tbps1;
																tbps1 = syntax_only_with(tb1, SYMBOL_PARAMETERS);
																if (tbps1 != NULL)
																{
																	int32_t r2;
																	r2 = syntax_equal_psps(program, obps1, tbps1);
																	if (r2 == -1)
																	{
																		return -1;
																	}
																	else 
																	if (r2 == 1)
																	{
																		syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																			ok1->declaration->position.line, ok1->declaration->position.column);
																		return -1;
																	}
																	else
																	{
																		itable_t *it2;
																		it2 = table_rpush(frame, target);
																		if (it2 == NULL)
																		{
																			fprintf(stderr, "unable to allocate memory\n");
																			return -1;
																		}
																	}
																}
																else
																{
																	int32_t pwv = 0;
																	symbol_t *obp1;
																	for (obp1 = obps1->begin;obp1 != obps1->end;obp1 = obp1->next)
																	{
																		symbol_t *obpv1;
																		obpv1 = syntax_only_with(obp1, SYMBOL_VALUE);
																		if (obpv1 == NULL)
																		{
																			pwv = 1;
																			break;
																		}
																	}

																	if (pwv == 0)
																	{
																		syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																			ok1->declaration->position.line, ok1->declaration->position.column);
																		return -1;
																	}

																	itable_t *it2;
																	it2 = table_rpush(frame, target);
																	if (it2 == NULL)
																	{
																		fprintf(stderr, "unable to allocate memory\n");
																		return -1;
																	}
																}
															}
															else
															{
																symbol_t *tbps1;
																tbps1 = syntax_only_with(tb1, SYMBOL_PARAMETERS);
																if (tbps1 != NULL)
																{
																	int32_t pwv = 0;
																	symbol_t *tbp1;
																	for (tbp1 = tbps1->begin;tbp1 != tbps1->end;tbp1 = tbp1->next)
																	{
																		symbol_t *tbpv1;
																		tbpv1 = syntax_only_with(tbp1, SYMBOL_VALUE);
																		if (tbpv1 == NULL)
																		{
																			pwv = 1;
																			break;
																		}
																	}

																	if (pwv == 0)
																	{
																		syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																			ok1->declaration->position.line, ok1->declaration->position.column);
																		return -1;
																	}

																	itable_t *it2;
																	it2 = table_rpush(frame, target);
																	if (it2 == NULL)
																	{
																		fprintf(stderr, "unable to allocate memory\n");
																		return -1;
																	}
																}
																else
																{
																	syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																		ok1->declaration->position.line, ok1->declaration->position.column);
																	return -1;
																}
															}
														}
													}
												}
											}
										}
									}
									else
									{
										symbol_t *tb1;
										for (tb1 = target->begin;tb1 != target->end;tb1 = tb1->next)
										{
											if (symbol_check_type(tb1, SYMBOL_FUNCTION))
											{
												symbol_t *tbk1;
												tbk1 = syntax_extract_with(tb1, SYMBOL_KEY);
												if (tbk1 != NULL)
												{
													if (syntax_idstrcmp(tbk1, "constructor") == 0)
													{
														symbol_t *obps1;
														obps1 = syntax_only_with(o1, SYMBOL_PARAMETERS);
														if (obps1 != NULL)
														{
															symbol_t *tbps1;
															tbps1 = syntax_only_with(tb1, SYMBOL_PARAMETERS);
															if (tbps1 != NULL)
															{
																int32_t r2;
																r2 = syntax_equal_psps(program, obps1, tbps1);
																if (r2 == -1)
																{
																	return -1;
																}
																else 
																if (r2 == 1)
																{
																	syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																		ok1->declaration->position.line, ok1->declaration->position.column);
																	return -1;
																}
																else
																{
																	itable_t *it2;
																	it2 = table_rpush(frame, target);
																	if (it2 == NULL)
																	{
																		fprintf(stderr, "unable to allocate memory\n");
																		return -1;
																	}
																}
															}
															else
															{
																int32_t pwv = 0;
																symbol_t *obp1;
																for (obp1 = obps1->begin;obp1 != obps1->end;obp1 = obp1->next)
																{
																	symbol_t *obpv1;
																	obpv1 = syntax_only_with(obp1, SYMBOL_VALUE);
																	if (obpv1 == NULL)
																	{
																		pwv = 1;
																		break;
																	}
																}

																if (pwv == 0)
																{
																	syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																		ok1->declaration->position.line, ok1->declaration->position.column);
																	return -1;
																}

																itable_t *it2;
																it2 = table_rpush(frame, target);
																if (it2 == NULL)
																{
																	fprintf(stderr, "unable to allocate memory\n");
																	return -1;
																}
															}
														}
														else
														{
															symbol_t *tbps1;
															tbps1 = syntax_only_with(tb1, SYMBOL_PARAMETERS);
															if (tbps1 != NULL)
															{
																int32_t pwv = 0;
																symbol_t *tbp1;
																for (tbp1 = tbps1->begin;tbp1 != tbps1->end;tbp1 = tbp1->next)
																{
																	symbol_t *tbpv1;
																	tbpv1 = syntax_only_with(tbp1, SYMBOL_VALUE);
																	if (tbpv1 == NULL)
																	{
																		pwv = 1;
																		break;
																	}
																}

																if (pwv == 0)
																{
																	syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																		ok1->declaration->position.line, ok1->declaration->position.column);
																	return -1;
																}

																itable_t *it2;
																it2 = table_rpush(frame, target);
																if (it2 == NULL)
																{
																	fprintf(stderr, "unable to allocate memory\n");
																	return -1;
																}
															}
															else
															{
																syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																	ok1->declaration->position.line, ok1->declaration->position.column);
																return -1;
															}
														}
													}
												}
											}
										}
									}
								}
							}
							else
							if (symbol_check_type(o1, SYMBOL_PROPERTY))
							{
								symbol_t *tgs1;
								tgs1 = syntax_only_with(target, SYMBOL_GENERICS);
								if (tgs1 != NULL)
								{
									int32_t gwv = 0;
									symbol_t *tg1;
									for (tg1 = tgs1->begin;tg1 != tgs1->end;tg1 = tg1->next)
									{
										if (symbol_check_type(tg1, SYMBOL_GENERIC))
										{
											symbol_t *tgv1;
											tgv1 = syntax_only_with(tg1, SYMBOL_VALUE);
											if (tgv1 != NULL)
											{
												gwv = 1;
												break;
											}
										}
									}
									if (gwv == 0)
									{
										symbol_t *tb1;
										for (tb1 = target->begin;tb1 != target->end;tb1 = tb1->next)
										{
											if (symbol_check_type(tb1, SYMBOL_FUNCTION))
											{
												symbol_t *tbk1;
												tbk1 = syntax_extract_with(tb1, SYMBOL_KEY);
												if (tbk1 != NULL)
												{
													if (syntax_idstrcmp(tbk1, "constructor") == 0)
													{
														symbol_t *tbps1;
														tbps1 = syntax_only_with(tb1, SYMBOL_PARAMETERS);
														if (tbps1 != NULL)
														{
															symbol_t *tbps1;
															tbps1 = syntax_only_with(tb1, SYMBOL_PARAMETERS);
															if (tbps1 != NULL)
															{
																int32_t pwv = 0;
																symbol_t *tbp1;
																for (tbp1 = tbps1->begin;tbp1 != tbps1->end;tbp1 = tbp1->next)
																{
																	symbol_t *tbpv1;
																	tbpv1 = syntax_only_with(tbp1, SYMBOL_VALUE);
																	if (tbpv1 == NULL)
																	{
																		pwv = 1;
																		break;
																	}
																}

																if (pwv == 0)
																{
																	syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																		ok1->declaration->position.line, ok1->declaration->position.column);
																	return -1;
																}

																itable_t *it2;
																it2 = table_rpush(frame, target);
																if (it2 == NULL)
																{
																	fprintf(stderr, "unable to allocate memory\n");
																	return -1;
																}
															}
															else
															{
																syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																	ok1->declaration->position.line, ok1->declaration->position.column);
																return -1;
															}
														}
													}
												}
											}
										}
									}
								}
								else
								{
									symbol_t *tb1;
									for (tb1 = target->begin;tb1 != target->end;tb1 = tb1->next)
									{
										if (symbol_check_type(tb1, SYMBOL_FUNCTION))
										{
											symbol_t *tbk1;
											tbk1 = syntax_extract_with(tb1, SYMBOL_KEY);
											if (tbk1 != NULL)
											{
												if (syntax_idstrcmp(tbk1, "constructor") == 0)
												{
													symbol_t *tbps1;
													tbps1 = syntax_only_with(tb1, SYMBOL_PARAMETERS);
													if (tbps1 != NULL)
													{
														int32_t pwv = 0;
														symbol_t *tbp1;
														for (tbp1 = tbps1->begin;tbp1 != tbps1->end;tbp1 = tbp1->next)
														{
															symbol_t *tbpv1;
															tbpv1 = syntax_only_with(tbp1, SYMBOL_VALUE);
															if (tbpv1 == NULL)
															{
																pwv = 1;
																break;
															}
														}

														if (pwv == 0)
														{
															syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																ok1->declaration->position.line, ok1->declaration->position.column);
															return -1;
														}

														itable_t *it2;
														it2 = table_rpush(frame, target);
														if (it2 == NULL)
														{
															fprintf(stderr, "unable to allocate memory\n");
															return -1;
														}
													}
												}
											}
										}
									}
								}
							}
							else
							if (symbol_check_type(o1, SYMBOL_ENUM))
							{
								symbol_t *tgs1;
								tgs1 = syntax_only_with(target, SYMBOL_GENERICS);
								if (tgs1 != NULL)
								{
									int32_t gwv = 0;
									symbol_t *tg1;
									for (tg1 = tgs1->begin;tg1 != tgs1->end;tg1 = tg1->next)
									{
										if (symbol_check_type(tg1, SYMBOL_GENERIC))
										{
											symbol_t *tgv1;
											tgv1 = syntax_only_with(tg1, SYMBOL_VALUE);
											if (tgv1 != NULL)
											{
												gwv = 1;
												break;
											}
										}
									}
									if (gwv == 0)
									{
										symbol_t *tb1;
										for (tb1 = target->begin;tb1 != target->end;tb1 = tb1->next)
										{
											if (symbol_check_type(tb1, SYMBOL_FUNCTION))
											{
												symbol_t *tbk1;
												tbk1 = syntax_extract_with(tb1, SYMBOL_KEY);
												if (tbk1 != NULL)
												{
													if (syntax_idstrcmp(tbk1, "constructor") == 0)
													{
														symbol_t *tbps1;
														tbps1 = syntax_only_with(tb1, SYMBOL_PARAMETERS);
														if (tbps1 != NULL)
														{
															int32_t pwv = 0;
															symbol_t *tbp1;
															for (tbp1 = tbps1->begin;tbp1 != tbps1->end;tbp1 = tbp1->next)
															{
																symbol_t *tbpv1;
																tbpv1 = syntax_only_with(tbp1, SYMBOL_VALUE);
																if (tbpv1 == NULL)
																{
																	pwv = 1;
																	break;
																}
															}

															if (pwv == 0)
															{
																syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																	ok1->declaration->position.line, ok1->declaration->position.column);
																return -1;
															}

															itable_t *it2;
															it2 = table_rpush(frame, target);
															if (it2 == NULL)
															{
																fprintf(stderr, "unable to allocate memory\n");
																return -1;
															}
														}
													}
												}
											}
										}
									}
								}
								else
								{
									symbol_t *tb1;
									for (tb1 = target->begin;tb1 != target->end;tb1 = tb1->next)
									{
										if (symbol_check_type(tb1, SYMBOL_FUNCTION))
										{
											symbol_t *tbk1;
											tbk1 = syntax_extract_with(tb1, SYMBOL_KEY);
											if (tbk1 != NULL)
											{
												if (syntax_idstrcmp(tbk1, "constructor") == 0)
												{
													symbol_t *tbps1;
													tbps1 = syntax_only_with(tb1, SYMBOL_PARAMETERS);
													if (tbps1 != NULL)
													{
														int32_t pwv = 0;
														symbol_t *tbp1;
														for (tbp1 = tbps1->begin;tbp1 != tbps1->end;tbp1 = tbp1->next)
														{
															symbol_t *tbpv1;
															tbpv1 = syntax_only_with(tbp1, SYMBOL_VALUE);
															if (tbpv1 == NULL)
															{
																pwv = 1;
																break;
															}
														}

														if (pwv == 0)
														{
															syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																ok1->declaration->position.line, ok1->declaration->position.column);
															return -1;
														}

														itable_t *it2;
														it2 = table_rpush(frame, target);
														if (it2 == NULL)
														{
															fprintf(stderr, "unable to allocate memory\n");
															return -1;
														}
													}
												}
											}
										}
									}
								}
							}
							else
							if (symbol_check_type(o1, SYMBOL_VAR))
							{
								symbol_t *tgs1;
								tgs1 = syntax_only_with(target, SYMBOL_GENERICS);
								if (tgs1 != NULL)
								{
									int32_t gwv = 0;
									symbol_t *tg1;
									for (tg1 = tgs1->begin;tg1 != tgs1->end;tg1 = tg1->next)
									{
										if (symbol_check_type(tg1, SYMBOL_GENERIC))
										{
											symbol_t *tgv1;
											tgv1 = syntax_only_with(tg1, SYMBOL_VALUE);
											if (tgv1 != NULL)
											{
												gwv = 1;
												break;
											}
										}
									}
									if (gwv == 0)
									{
										symbol_t *tb1;
										for (tb1 = target->begin;tb1 != target->end;tb1 = tb1->next)
										{
											if (symbol_check_type(tb1, SYMBOL_FUNCTION))
											{
												symbol_t *tbk1;
												tbk1 = syntax_extract_with(tb1, SYMBOL_KEY);
												if (tbk1 != NULL)
												{
													if (syntax_idstrcmp(tbk1, "constructor") == 0)
													{
														symbol_t *tbps1;
														tbps1 = syntax_only_with(tb1, SYMBOL_PARAMETERS);
														if (tbps1 != NULL)
														{
															int32_t pwv = 0;
															symbol_t *tbp1;
															for (tbp1 = tbps1->begin;tbp1 != tbps1->end;tbp1 = tbp1->next)
															{
																symbol_t *tbpv1;
																tbpv1 = syntax_only_with(tbp1, SYMBOL_VALUE);
																if (tbpv1 == NULL)
																{
																	pwv = 1;
																	break;
																}
															}

															if (pwv == 0)
															{
																syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																	ok1->declaration->position.line, ok1->declaration->position.column);
																return -1;
															}

															itable_t *it2;
															it2 = table_rpush(frame, target);
															if (it2 == NULL)
															{
																fprintf(stderr, "unable to allocate memory\n");
																return -1;
															}
														}
													}
												}
											}
										}
									}
								}
								else
								{
									symbol_t *tb1;
									for (tb1 = target->begin;tb1 != target->end;tb1 = tb1->next)
									{
										if (symbol_check_type(tb1, SYMBOL_FUNCTION))
										{
											symbol_t *tbk1;
											tbk1 = syntax_extract_with(tb1, SYMBOL_KEY);
											if (tbk1 != NULL)
											{
												if (syntax_idstrcmp(tbk1, "constructor") == 0)
												{
													symbol_t *tbps1;
													tbps1 = syntax_only_with(tb1, SYMBOL_PARAMETERS);
													if (tbps1 != NULL)
													{
														int32_t pwv = 0;
														symbol_t *tbp1;
														for (tbp1 = tbps1->begin;tbp1 != tbps1->end;tbp1 = tbp1->next)
														{
															symbol_t *tbpv1;
															tbpv1 = syntax_only_with(tbp1, SYMBOL_VALUE);
															if (tbpv1 == NULL)
															{
																pwv = 1;
																break;
															}
														}

														if (pwv == 0)
														{
															syntax_error(program, tk1, "defination repeated, another defination in %lld:%lld",
																ok1->declaration->position.line, ok1->declaration->position.column);
															return -1;
														}

														itable_t *it2;
														it2 = table_rpush(frame, target);
														if (it2 == NULL)
														{
															fprintf(stderr, "unable to allocate memory\n");
															return -1;
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}