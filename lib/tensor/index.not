using Print from "~/os";

export class Tensor<T extends float = float> {
    _dims = [];
    _values = [];
    export fun constructor(*values:T, dims = []) {
        _dims = dims.Count() > 0 ? dims : [values.Count()];
        _values = values;
    }

    export fun GetIndex(*pos:int) {
        var index = 0;
        var stride = 1;
        for (var i = _dims.Count() - 1; i >= 0; i -= 1) {
            index += pos[i] * stride;
            stride *= _dims[i];
        }
        return index;
    }

    export fun GetPosition(index:int) {
        var pos = [];
        for (var i = _dims.Count() - 1; i >= 0; i -= 1) {
            pos.Set(i, index % _dims[i]);
            index \= _dims[i];
        }
        return pos;
    }
}